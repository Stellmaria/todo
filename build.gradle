plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.ben-manes.versions' version '0.51.0' //    ./gradlew dependencyUpdates
    id "com.autonomousapps.dependency-analysis" version '1.33.0' //    ./gradlew buildHealth
}

apply from: 'version.gradle'

group = 'org.lib'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${versions.spring}"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:${versions.spring}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${versions.spring}"
    implementation "org.springframework.boot:spring-boot-starter-web:${versions.spring}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${versions.spring}"
    implementation "org.springframework.restdocs:spring-restdocs-mockmvc:${versions.mockmvc}"
    implementation "org.springframework.boot:spring-boot-starter-security:${versions.spring}"

    implementation "org.springdoc:springdoc-openapi-ui:${versions.springdoc}"

//    implementation 'org.hibernate.validator:hibernate-validator:9.0.0.Beta2'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

    implementation "org.liquibase:liquibase-core:${versions.liquibase}"

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    implementation "org.postgresql:postgresql:${versions.postgresql}"

    implementation "org.jetbrains:annotations:${versions.jetbrains}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${versions.spring}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${versions.junit}"
}

tasks.named('test') {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '8.9'
}